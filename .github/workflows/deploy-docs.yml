name: Deploy Docs to GitHub Pages

on:
  push:
    branches: [main]
    paths:
      - 'app/docs/**'
      - 'apps/docs/**'
      - 'docusaurus.config.*'
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/deploy-docs.yml'
  pull_request:
    paths:
      - 'app/docs/**'
      - 'apps/docs/**'
      - 'docusaurus.config.*'
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/deploy-docs.yml'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NX_DAEMON: 'false'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install
        run: npm ci --legacy-peer-deps

      # If your docs are an Nx target, use that; otherwise npm script.
      - name: Build docs (Nx)
        run: npx nx run docs:build
        # If not Nx: run: npm run build --workspace=@your/docs-app

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Adjust to your Docusaurus output (default "build")
          path: app/docs/build

  deploy:
    # For pushes to main: deploy to production
    # For PRs: this will automatically create a "Preview" deployment
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4
